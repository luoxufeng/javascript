<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
  <div id="search_container"></div>

    <script type="text/template" id="search_template">
        <ul>
         <% _.each(labels, function(name) { %>
    <% if(name != "label2") {%>
    <li><%= name %></li>
    <% } %>
<% }); %>
        </ul>
      
    
    </script>
<script src="http://the5fireblog.b0.upaiyun.com/staticfile/jquery-1.10.2.js"></script>
<script src="http://the5fireblog.b0.upaiyun.com/staticfile/underscore.js"></script>
<script src="http://the5fireblog.b0.upaiyun.com/staticfile/backbone.js"></script>
<script>
    (function ($) {
        //此处添加下面的试验代码
        var SearchView = Backbone.View.extend({
            initialize: function () {
                var labels = ['label1','label2','label3'];
                this.render({ labels: labels });
            },
            render: function (context) {
                //使用underscore这个库，来编译模板
                var template = _.template($("#search_template").html(), context);
                //加载模板到对应的el属性中
                $(this.el).html(template);
            }
        });
        var searchView = new SearchView({ el: $("#search_container") });
        //searchView.render({ search_label: "搜索渲染" });  //这个reander的方法可以放到view的构造函数中,这样初始化时就会自动渲染
    })(jQuery);
</script>
</body>
</html>
